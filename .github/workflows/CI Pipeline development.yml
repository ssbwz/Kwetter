name: CI Pipeline

on:
  push:
    branches:
      - development
  pull_request:
    branches:
      - development

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Build identity_service
        run: |
          cd identity_service
          dotnet restore "identity_service.sln"
          dotnet build
      
      - name: Build profile_service
        run: |
          cd profile_service
          dotnet restore "profile_service.sln"
          dotnet build 
          
      - name: Build tweet_service
        run: |
          cd Tweet_service
          dotnet restore "Tweet_service.sln"
          dotnet build 

      - name: Build api_gateway
        run: |
          cd api_gateway
          dotnet restore "api_gateway.sln"
          dotnet build 
            
          
      - name: Build frontend
        run: |
            cd frontend
            npm install
            npm run build --if-present

  analysis:
   runs-on: ubuntu-latest
   steps:
      - name: Official SonarQube Scan
        uses: SonarSource/sonarcloud-github-action@v2.2.0
        
      - name: Set up Azure Key Vault secrets
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        
      - name: Fetch secrets from Azure Key Vault
        uses: Azure/get-keyvault-secrets@v1
        with:
         keyvault: ${{ secrets.KEY_VAULT }}
         secrets: 'SONAR-HOST, SONAR-IDENTITY-SERVICE-TOKEN, SONAR-PROFILE-SERVICE-TOKEN, SONAR-TWEET-SERVICE-TOKEN'
        id: getSecerts
            
      - name: Analysis identity_service
        run: |
          cd identity_service
          dotnet sonarscanner begin /k:"identity_service" /d:sonar.host.url=${{  steps.getSecerts.outputs.SONAR-HOST }}  /d:sonar.login=${{ steps.getSecerts.outputs.SONAR-IDENTITY-SERVICE-TOKEN }}
          dotnet build
          dotnet sonarscanner end /d:sonar.login=${{ steps.getSecerts.outputs.SONAR-IDENTITY-SERVICE-TOKEN }}

      - name: Analysis profile_service
        run: |
          cd profile_service
          dotnet sonarscanner begin /k:"profile_service" /d:sonar.host.url="${{ steps.getSecerts.outputs.SONAR-HOST }}"  /d:sonar.login="${{ steps.getSecerts.outputs.SONAR-PROFILE-SERVICE-TOKEN }}"
          dotnet build
          dotnet sonarscanner end /d:sonar.login="${{ steps.getSecerts.outputs.SONAR-PROFILE-SERVICE-TOKEN }}"

      - name: Analysis tweet_service
        run: |
          cd Tweet_service
          dotnet sonarscanner begin /k:"tweet_service" /d:sonar.host.url="${{ steps.getSecerts.outputs.SONAR-HOST }}"  /d:sonar.login="${{ steps.getSecerts.outputs.SONAR-TWEET-SERVICE-TOKEN }}"
          dotnet build
          dotnet sonarscanner end /d:sonar.login="${{ steps.getSecerts.outputs.SONAR-TWEET-SERVICE-TOKEN }}"
