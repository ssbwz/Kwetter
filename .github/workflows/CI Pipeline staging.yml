name: CI Pipeline

on:
  push:
    branches:
      - staging
  pull_request:
    branches:
      - staging

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: false
      DOTNET_VERSION: 8.0.x
      NODEJS_VERSION: 17
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
        
      - name: Build identity_service
        run: |
          cd identity_service
          dotnet restore "identity_service.sln"
          dotnet build
      
      - name: Build profile_service
        run: |
          cd profile_service
          dotnet restore "profile_service.sln"
          dotnet build 

      - name: Build api_gateway
        run: |
          cd api_gateway
          dotnet restore "api_gateway.sln"
          dotnet build 
      
      - name: Build tweet_service
        run: |
          cd Tweet_service
          dotnet restore "Tweet_service.sln"
          dotnet build
            
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '${{ env.NODEJS_VERSION }}'

      - name: Build frontend
        run: |
            cd frontend
            npm install
            npm run build --if-present
 
  analysis:
   needs: build
   runs-on: self-hosted
   steps:
      - name: Analysis identity_service
        run: |
          cd identity_service
          dotnet sonarscanner begin /k:"identity_service" /d:sonar.host.url=${{  secrets.SONAR_HOST }}  /d:sonar.login=${{ secrets.SONAR_IDENTITY_SERVICE_TOKEN }}
          dotnet build
          dotnet sonarscanner end /d:sonar.login=${{ secrets.SONAR_IDENTITY_SERVICE_TOKEN }}

      - name: Analysis profile_service
        run: |
          cd profile_service
          dotnet sonarscanner begin /k:"profile_service" /d:sonar.host.url="${{ secrets.SONAR_HOST }}"  /d:sonar.login="${{ secrets.SONAR_PROFILE_SERVICE_TOKEN }}"
          dotnet build
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_PROFILE_SERVICE_TOKEN }}"

      - name: Analysis tweet_service
        run: |
          cd Tweet_service
          dotnet sonarscanner begin /k:"tweet_service" /d:sonar.host.url="${{ secrets.SONAR_HOST }}"  /d:sonar.login="${{ secrets.SONAR_TWEET_SERVICE_TOKEN }}"
          dotnet build
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TWEET_SERVICE_TOKEN }}"
  ui-test:
    runs-on: ubuntu-latest
    env:
      CI: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '${{ env.NODEJS_VERSION }}'

      - name: Docker compose tests run
        uses: cloudposse/github-action-docker-compose-test-run@0.2.0
      - name: Wait for 50 seconds
        run: sleep 50
      
      - name: test ui
        run: |
          cd frontend
          npm install
          npx cypress run
