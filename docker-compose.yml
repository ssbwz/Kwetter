version: '2'


networks:
  app-network:
    driver: bridge
    
services:
  profile-service-2:
    build:
      context: ./profile_service
      dockerfile: Dockerfile
    container_name: profile-service-2
    ports:
      - "8087:8080"
    depends_on: 
      - profile-service-db
      - messaging-broker
    networks:
      - app-network
    restart: on-failure

  profile-service:
    build:
      context: ./profile_service
      dockerfile: Dockerfile
    container_name: profile-service
    ports:
      - "8081:8080"
    depends_on: 
      - profile-service-db
      - messaging-broker
    networks:
      - app-network
    restart: on-failure
    
  profile-service-db:
    image: postgres
    container_name: profile-service-db
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: profileservice
    ports:
      - "5433:5432"
    volumes:
      - pg_profile:/var/lib/postgresql/data
    networks:
      - app-network
    restart: always

  api-gateway:
    build:
      context: ./api_gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    networks:
      - app-network
    restart: on-failure

  messaging-broker:
    image: rabbitmq:3-management
    container_name: messaging-broker
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    networks:
      - app-network
    restart: always

  identity-service:
    build:
      context: ./identity_service
      dockerfile: Dockerfile
    container_name: identity-service
    ports:
      - "8082:8080"
    depends_on:
      - identity-service-db
      - messaging-broker
    networks:
      - app-network
    restart: on-failure

  identity-service-2:
    build:
      context: ./identity_service
      dockerfile: Dockerfile
    container_name: identity-service-2
    ports:
      - "8086:8080"
    depends_on:
      - identity-service-db
      - messaging-broker
    networks:
      - app-network
    restart: on-failure

  identity-service-db:
    image: postgres
    container_name: identity-service-db
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: identityservice
    ports:
      - "5432:5432"
    volumes:
      - pg_identity:/var/lib/postgresql/data
    networks:
      - app-network
    restart: always

  tweet-service:
    build:
      context: ./tweet_service
      dockerfile: Dockerfile
    container_name: tweet-service
    ports:
      - "8083:8080"
    depends_on:
      - tweet-service-db
      - messaging-broker
    networks:
      - app-network
    restart: on-failure

  tweet-service-db:
    image: postgres
    container_name: tweet-service-db
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: tweetservice
    ports:
      - "5434:5432"
    volumes:
      - pg_tweet:/var/lib/postgresql/data
    networks:
      - app-network
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    depends_on:
      - api-gateway
    networks:
      - app-network
    restart: on-failure

volumes:
  pg_identity:
  pg_profile:
  pg_tweet:
  rabbitmq_data:
